"""empty message

Revision ID: 0d066140dcad
Revises: None
Create Date: 2016-01-23 12:20:03.341000

"""

# revision identifiers, used by Alembic.
revision = '0d066140dcad'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('club_events')
    op.drop_table('club_admins')
    op.drop_table('gcmids')
    op.drop_table('user_clubs')
    op.drop_table('users')
    op.drop_table('user_events')
    op.drop_table('clubs')
    op.drop_table('events')
    op.drop_table('contacts_events')
    op.drop_table('orgfor')
    op.drop_table('orgby')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orgby',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('orgBy', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], [u'events.id'], name=u'orgby_event_id_fkey'),
    sa.ForeignKeyConstraint(['orgBy'], [u'clubs.id'], name=u'orgby_orgBy_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'orgby_pkey')
    )
    op.create_table('orgfor',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('orgFor', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], [u'events.id'], name=u'orgfor_event_id_fkey'),
    sa.ForeignKeyConstraint(['orgFor'], [u'clubs.id'], name=u'orgfor_orgFor_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'orgfor_pkey')
    )
    op.create_table('contacts_events',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('contactName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contactNumber', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], [u'events.id'], name=u'contacts_events_event_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'contacts_events_pkey')
    )
    op.create_table('events',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('events_id_seq'::regclass)"), nullable=False),
    sa.Column('eventName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('eventInfo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('startDateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('endDateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('lastRegDateTime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('totalSeats', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('occupiedSeats', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('leftSeats', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('eventVenue', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('createdBy', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('activeStatus', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('imageLink', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('time_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['createdBy'], [u'users.id'], name=u'events_createdBy_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'events_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('clubs',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('clubs_id_seq'::regclass)"), nullable=False),
    sa.Column('clubName', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('aboutClub', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'clubs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_events',
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], [u'events.id'], name=u'user_events_event_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], [u'users.id'], name=u'user_events_user_id_fkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('users_id_seq'::regclass)"), nullable=False),
    sa.Column('userName', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('passwordHash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('isAdmin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('currentAdmin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('activeStatus', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('isVerified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('fullName', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('rollNo', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('emailId', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mobNo', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'users_pkey'),
    sa.UniqueConstraint('emailId', name=u'users_emailId_key'),
    sa.UniqueConstraint('mobNo', name=u'users_mobNo_key'),
    sa.UniqueConstraint('rollNo', name=u'users_rollNo_key'),
    sa.UniqueConstraint('userName', name=u'users_userName_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_clubs',
    sa.Column('club_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['club_id'], [u'clubs.id'], name=u'user_clubs_club_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], [u'users.id'], name=u'user_clubs_user_id_fkey')
    )
    op.create_table('gcmids',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('data', postgresql.ARRAY(VARCHAR()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'gcmids_pkey')
    )
    op.create_table('club_admins',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('club_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['club_id'], [u'clubs.id'], name=u'club_admins_club_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], [u'users.id'], name=u'club_admins_user_id_fkey')
    )
    op.create_table('club_events',
    sa.Column('clubs_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('events_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['clubs_id'], [u'clubs.id'], name=u'club_events_clubs_id_fkey'),
    sa.ForeignKeyConstraint(['events_id'], [u'events.id'], name=u'club_events_events_id_fkey')
    )
    ### end Alembic commands ###
